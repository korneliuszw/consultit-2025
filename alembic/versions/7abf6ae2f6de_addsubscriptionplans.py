"""addSubscriptionPlans

Revision ID: 7abf6ae2f6de
Revises: 1af46aba0207
Create Date: 2025-04-20 23:02:54.852575

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7abf6ae2f6de"
down_revision: Union[str, None] = "1af46aba0207"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "SUBSCRIPTION_PLAN",
        sa.Column("plan_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("base_price", sa.Integer(), nullable=False),
        sa.Column("final_price_formula", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("plan_id"),
    )
    op.execute(
        """
        INSERT INTO SUBSCRIPTION_PLAN (plan_id, name, base_price, final_price_formula)
        VALUES (0, 'UNASSIGNED', 0, 'BASE_PRICE')
    """
    )
    with op.batch_alter_table("CUSTOMER", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "owned_ip_addresses", sa.Integer(), nullable=False, server_default="0"
            )
        )
        batch_op.add_column(
            sa.Column(
                "marketing_bonus", sa.Boolean(), nullable=False, server_default="FALSE"
            )
        )
        batch_op.add_column(
            sa.Column(
                "einvoice_bonus", sa.Boolean(), nullable=False, server_default="FALSE"
            )
        )
        batch_op.add_column(
            sa.Column(
                "subscription_plan_id", sa.Integer(), nullable=False, server_default="0"
            )
        )
        batch_op.create_foreign_key(
            None, "SUBSCRIPTION_PLAN", ["subscription_plan_id"], ["plan_id"]
        )
        batch_op.drop_column("monthly_amount_due")

    with op.batch_alter_table("INVOICES", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("subscription_plan_name", sa.String(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("subscription_used_formula", sa.String(), nullable=False)
        )

    with op.batch_alter_table("USERS", schema=None) as batch_op:
        batch_op.alter_column(
            "current_session_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("USERS", schema=None) as batch_op:
        batch_op.alter_column(
            "current_session_id",
            existing_type=sa.UUID(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )

    with op.batch_alter_table("INVOICES", schema=None) as batch_op:
        batch_op.drop_column("subscription_used_formula")
        batch_op.drop_column("subscription_plan_name")

    with op.batch_alter_table("CUSTOMER", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("monthly_amount_due", sa.INTEGER(), nullable=False)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("subscription_plan_id")
        batch_op.drop_column("einvoice_bonus")
        batch_op.drop_column("marketing_bonus")
        batch_op.drop_column("owned_ip_addresses")

    op.drop_table("SUBSCRIPTION_PLAN")
    # ### end Alembic commands ###
